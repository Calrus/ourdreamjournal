// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: dream_journal.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User represents a user account
type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_dream_journal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// RegisterRequest is used to create a new user account
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_dream_journal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// LoginRequest is used to authenticate a user
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_dream_journal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// AuthResponse is returned after successful authentication
type AuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	mi := &file_dream_journal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{3}
}

func (x *AuthResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AuthResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Dream represents a single dream entry
type Dream struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Text      string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Timestamp int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp
	Public    bool                   `protobuf:"varint,5,opt,name=public,proto3" json:"public,omitempty"`
	Title     string                 `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
	// Ratings (1-10)
	NightmareRating          int32 `protobuf:"varint,12,opt,name=nightmare_rating,json=nightmareRating,proto3" json:"nightmare_rating,omitempty"`                              // 1 = nightmare, 10 = great dream
	VividnessRating          int32 `protobuf:"varint,13,opt,name=vividness_rating,json=vividnessRating,proto3" json:"vividness_rating,omitempty"`                              // 1 = not vivid, 10 = extremely vivid
	ClarityRating            int32 `protobuf:"varint,14,opt,name=clarity_rating,json=clarityRating,proto3" json:"clarity_rating,omitempty"`                                    // 1 = foggy, 10 = crystal clear
	EmotionalIntensityRating int32 `protobuf:"varint,15,opt,name=emotional_intensity_rating,json=emotionalIntensityRating,proto3" json:"emotional_intensity_rating,omitempty"` // 1 = flat, 10 = intense
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Dream) Reset() {
	*x = Dream{}
	mi := &file_dream_journal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dream) ProtoMessage() {}

func (x *Dream) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dream.ProtoReflect.Descriptor instead.
func (*Dream) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{4}
}

func (x *Dream) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dream) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Dream) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Dream) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Dream) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *Dream) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Dream) GetNightmareRating() int32 {
	if x != nil {
		return x.NightmareRating
	}
	return 0
}

func (x *Dream) GetVividnessRating() int32 {
	if x != nil {
		return x.VividnessRating
	}
	return 0
}

func (x *Dream) GetClarityRating() int32 {
	if x != nil {
		return x.ClarityRating
	}
	return 0
}

func (x *Dream) GetEmotionalIntensityRating() int32 {
	if x != nil {
		return x.EmotionalIntensityRating
	}
	return 0
}

// DreamRequest is used to create a new dream entry
type DreamRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	UserId string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Text   string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Public bool                   `protobuf:"varint,3,opt,name=public,proto3" json:"public,omitempty"`
	Title  string                 `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
	// Ratings (1-10)
	NightmareRating          int32 `protobuf:"varint,12,opt,name=nightmare_rating,json=nightmareRating,proto3" json:"nightmare_rating,omitempty"`
	VividnessRating          int32 `protobuf:"varint,13,opt,name=vividness_rating,json=vividnessRating,proto3" json:"vividness_rating,omitempty"`
	ClarityRating            int32 `protobuf:"varint,14,opt,name=clarity_rating,json=clarityRating,proto3" json:"clarity_rating,omitempty"`
	EmotionalIntensityRating int32 `protobuf:"varint,15,opt,name=emotional_intensity_rating,json=emotionalIntensityRating,proto3" json:"emotional_intensity_rating,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DreamRequest) Reset() {
	*x = DreamRequest{}
	mi := &file_dream_journal_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DreamRequest) ProtoMessage() {}

func (x *DreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DreamRequest.ProtoReflect.Descriptor instead.
func (*DreamRequest) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{5}
}

func (x *DreamRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DreamRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DreamRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *DreamRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DreamRequest) GetNightmareRating() int32 {
	if x != nil {
		return x.NightmareRating
	}
	return 0
}

func (x *DreamRequest) GetVividnessRating() int32 {
	if x != nil {
		return x.VividnessRating
	}
	return 0
}

func (x *DreamRequest) GetClarityRating() int32 {
	if x != nil {
		return x.ClarityRating
	}
	return 0
}

func (x *DreamRequest) GetEmotionalIntensityRating() int32 {
	if x != nil {
		return x.EmotionalIntensityRating
	}
	return 0
}

// DreamResponse is returned after creating a dream
type DreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dream         *Dream                 `protobuf:"bytes,1,opt,name=dream,proto3" json:"dream,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DreamResponse) Reset() {
	*x = DreamResponse{}
	mi := &file_dream_journal_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DreamResponse) ProtoMessage() {}

func (x *DreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DreamResponse.ProtoReflect.Descriptor instead.
func (*DreamResponse) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{6}
}

func (x *DreamResponse) GetDream() *Dream {
	if x != nil {
		return x.Dream
	}
	return nil
}

// DreamSummary is returned after summarizing a dream
type DreamSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       string                 `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DreamSummary) Reset() {
	*x = DreamSummary{}
	mi := &file_dream_journal_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DreamSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DreamSummary) ProtoMessage() {}

func (x *DreamSummary) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DreamSummary.ProtoReflect.Descriptor instead.
func (*DreamSummary) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{7}
}

func (x *DreamSummary) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

// ProphecyResponse is returned after generating a prophecy
type ProphecyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prophecy      string                 `protobuf:"bytes,1,opt,name=prophecy,proto3" json:"prophecy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProphecyResponse) Reset() {
	*x = ProphecyResponse{}
	mi := &file_dream_journal_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProphecyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProphecyResponse) ProtoMessage() {}

func (x *ProphecyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProphecyResponse.ProtoReflect.Descriptor instead.
func (*ProphecyResponse) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{8}
}

func (x *ProphecyResponse) GetProphecy() string {
	if x != nil {
		return x.Prophecy
	}
	return ""
}

// TagResponse is returned after extracting tags from a dream
type TagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []string               `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagResponse) Reset() {
	*x = TagResponse{}
	mi := &file_dream_journal_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagResponse) ProtoMessage() {}

func (x *TagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagResponse.ProtoReflect.Descriptor instead.
func (*TagResponse) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{9}
}

func (x *TagResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// ListRequest is used to fetch dreams
type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IncludePublic bool                   `protobuf:"varint,2,opt,name=include_public,json=includePublic,proto3" json:"include_public,omitempty"` // Whether to include public dreams from other users
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_dream_journal_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{10}
}

func (x *ListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListRequest) GetIncludePublic() bool {
	if x != nil {
		return x.IncludePublic
	}
	return false
}

// UserRequest is used to fetch AI insights for a user
type UserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_dream_journal_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{11}
}

func (x *UserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// DreamInsight contains AI summary and tags for a dream
type DreamInsight struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DreamId       string                 `protobuf:"bytes,1,opt,name=dream_id,json=dreamId,proto3" json:"dream_id,omitempty"`
	Summary       string                 `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DreamInsight) Reset() {
	*x = DreamInsight{}
	mi := &file_dream_journal_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DreamInsight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DreamInsight) ProtoMessage() {}

func (x *DreamInsight) ProtoReflect() protoreflect.Message {
	mi := &file_dream_journal_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DreamInsight.ProtoReflect.Descriptor instead.
func (*DreamInsight) Descriptor() ([]byte, []int) {
	return file_dream_journal_proto_rawDescGZIP(), []int{12}
}

func (x *DreamInsight) GetDreamId() string {
	if x != nil {
		return x.DreamId
	}
	return ""
}

func (x *DreamInsight) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *DreamInsight) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_dream_journal_proto protoreflect.FileDescriptor

const file_dream_journal_proto_rawDesc = "" +
	"\n" +
	"\x13dream_journal.proto\x12\fdreamjournal\x1a\x1cgoogle/api/annotations.proto\"g\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\"_\n" +
	"\x0fRegisterRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\"@\n" +
	"\fLoginRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"L\n" +
	"\fAuthResponse\x12&\n" +
	"\x04user\x18\x01 \x01(\v2\x12.dreamjournal.UserR\x04user\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"\xcb\x02\n" +
	"\x05Dream\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x16\n" +
	"\x06public\x18\x05 \x01(\bR\x06public\x12\x14\n" +
	"\x05title\x18\v \x01(\tR\x05title\x12)\n" +
	"\x10nightmare_rating\x18\f \x01(\x05R\x0fnightmareRating\x12)\n" +
	"\x10vividness_rating\x18\r \x01(\x05R\x0fvividnessRating\x12%\n" +
	"\x0eclarity_rating\x18\x0e \x01(\x05R\rclarityRating\x12<\n" +
	"\x1aemotional_intensity_rating\x18\x0f \x01(\x05R\x18emotionalIntensityRating\"\xa4\x02\n" +
	"\fDreamRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x16\n" +
	"\x06public\x18\x03 \x01(\bR\x06public\x12\x14\n" +
	"\x05title\x18\v \x01(\tR\x05title\x12)\n" +
	"\x10nightmare_rating\x18\f \x01(\x05R\x0fnightmareRating\x12)\n" +
	"\x10vividness_rating\x18\r \x01(\x05R\x0fvividnessRating\x12%\n" +
	"\x0eclarity_rating\x18\x0e \x01(\x05R\rclarityRating\x12<\n" +
	"\x1aemotional_intensity_rating\x18\x0f \x01(\x05R\x18emotionalIntensityRating\":\n" +
	"\rDreamResponse\x12)\n" +
	"\x05dream\x18\x01 \x01(\v2\x13.dreamjournal.DreamR\x05dream\"(\n" +
	"\fDreamSummary\x12\x18\n" +
	"\asummary\x18\x01 \x01(\tR\asummary\".\n" +
	"\x10ProphecyResponse\x12\x1a\n" +
	"\bprophecy\x18\x01 \x01(\tR\bprophecy\"!\n" +
	"\vTagResponse\x12\x12\n" +
	"\x04tags\x18\x01 \x03(\tR\x04tags\"M\n" +
	"\vListRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12%\n" +
	"\x0einclude_public\x18\x02 \x01(\bR\rincludePublic\"&\n" +
	"\vUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"W\n" +
	"\fDreamInsight\x12\x19\n" +
	"\bdream_id\x18\x01 \x01(\tR\adreamId\x12\x18\n" +
	"\asummary\x18\x02 \x01(\tR\asummary\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags2\x9f\x05\n" +
	"\fDreamJournal\x12_\n" +
	"\bRegister\x12\x1d.dreamjournal.RegisterRequest\x1a\x1a.dreamjournal.AuthResponse\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/api/register\x12V\n" +
	"\x05Login\x12\x1a.dreamjournal.LoginRequest\x1a\x1a.dreamjournal.AuthResponse\"\x15\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/api/login\x12]\n" +
	"\vCreateDream\x12\x1a.dreamjournal.DreamRequest\x1a\x1b.dreamjournal.DreamResponse\"\x15\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/api/dream\x12S\n" +
	"\n" +
	"ListDreams\x12\x19.dreamjournal.ListRequest\x1a\x13.dreamjournal.Dream\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/api/dreams0\x01\x12H\n" +
	"\x0eSummarizeDream\x12\x1a.dreamjournal.DreamRequest\x1a\x1a.dreamjournal.DreamSummary\x12K\n" +
	"\rDreamProphecy\x12\x1a.dreamjournal.DreamRequest\x1a\x1e.dreamjournal.ProphecyResponse\x12A\n" +
	"\bTagDream\x12\x1a.dreamjournal.DreamRequest\x1a\x19.dreamjournal.TagResponse\x12H\n" +
	"\rGetAIInsights\x12\x19.dreamjournal.UserRequest\x1a\x1a.dreamjournal.DreamInsight0\x01B1Z/github.com/Calrus/ourdreamjournal/backend/protob\x06proto3"

var (
	file_dream_journal_proto_rawDescOnce sync.Once
	file_dream_journal_proto_rawDescData []byte
)

func file_dream_journal_proto_rawDescGZIP() []byte {
	file_dream_journal_proto_rawDescOnce.Do(func() {
		file_dream_journal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dream_journal_proto_rawDesc), len(file_dream_journal_proto_rawDesc)))
	})
	return file_dream_journal_proto_rawDescData
}

var file_dream_journal_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_dream_journal_proto_goTypes = []any{
	(*User)(nil),             // 0: dreamjournal.User
	(*RegisterRequest)(nil),  // 1: dreamjournal.RegisterRequest
	(*LoginRequest)(nil),     // 2: dreamjournal.LoginRequest
	(*AuthResponse)(nil),     // 3: dreamjournal.AuthResponse
	(*Dream)(nil),            // 4: dreamjournal.Dream
	(*DreamRequest)(nil),     // 5: dreamjournal.DreamRequest
	(*DreamResponse)(nil),    // 6: dreamjournal.DreamResponse
	(*DreamSummary)(nil),     // 7: dreamjournal.DreamSummary
	(*ProphecyResponse)(nil), // 8: dreamjournal.ProphecyResponse
	(*TagResponse)(nil),      // 9: dreamjournal.TagResponse
	(*ListRequest)(nil),      // 10: dreamjournal.ListRequest
	(*UserRequest)(nil),      // 11: dreamjournal.UserRequest
	(*DreamInsight)(nil),     // 12: dreamjournal.DreamInsight
}
var file_dream_journal_proto_depIdxs = []int32{
	0,  // 0: dreamjournal.AuthResponse.user:type_name -> dreamjournal.User
	4,  // 1: dreamjournal.DreamResponse.dream:type_name -> dreamjournal.Dream
	1,  // 2: dreamjournal.DreamJournal.Register:input_type -> dreamjournal.RegisterRequest
	2,  // 3: dreamjournal.DreamJournal.Login:input_type -> dreamjournal.LoginRequest
	5,  // 4: dreamjournal.DreamJournal.CreateDream:input_type -> dreamjournal.DreamRequest
	10, // 5: dreamjournal.DreamJournal.ListDreams:input_type -> dreamjournal.ListRequest
	5,  // 6: dreamjournal.DreamJournal.SummarizeDream:input_type -> dreamjournal.DreamRequest
	5,  // 7: dreamjournal.DreamJournal.DreamProphecy:input_type -> dreamjournal.DreamRequest
	5,  // 8: dreamjournal.DreamJournal.TagDream:input_type -> dreamjournal.DreamRequest
	11, // 9: dreamjournal.DreamJournal.GetAIInsights:input_type -> dreamjournal.UserRequest
	3,  // 10: dreamjournal.DreamJournal.Register:output_type -> dreamjournal.AuthResponse
	3,  // 11: dreamjournal.DreamJournal.Login:output_type -> dreamjournal.AuthResponse
	6,  // 12: dreamjournal.DreamJournal.CreateDream:output_type -> dreamjournal.DreamResponse
	4,  // 13: dreamjournal.DreamJournal.ListDreams:output_type -> dreamjournal.Dream
	7,  // 14: dreamjournal.DreamJournal.SummarizeDream:output_type -> dreamjournal.DreamSummary
	8,  // 15: dreamjournal.DreamJournal.DreamProphecy:output_type -> dreamjournal.ProphecyResponse
	9,  // 16: dreamjournal.DreamJournal.TagDream:output_type -> dreamjournal.TagResponse
	12, // 17: dreamjournal.DreamJournal.GetAIInsights:output_type -> dreamjournal.DreamInsight
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_dream_journal_proto_init() }
func file_dream_journal_proto_init() {
	if File_dream_journal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dream_journal_proto_rawDesc), len(file_dream_journal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dream_journal_proto_goTypes,
		DependencyIndexes: file_dream_journal_proto_depIdxs,
		MessageInfos:      file_dream_journal_proto_msgTypes,
	}.Build()
	File_dream_journal_proto = out.File
	file_dream_journal_proto_goTypes = nil
	file_dream_journal_proto_depIdxs = nil
}
